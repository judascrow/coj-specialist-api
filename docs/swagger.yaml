basePath: /api/v1
definitions:
  models.ChangePassword:
    properties:
      current_password:
        description: รหัสผ่านปัจจุบัน
        example: password
        type: string
      new_password:
        description: รหัสผ่านใหม่
        example: password123
        type: string
    required:
    - current_password
    - new_password
    type: object
  models.RegisterUser:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    - username
    type: object
  models.Role:
    properties:
      description:
        example: Only for standard users
        type: string
      name:
        example: user
        type: string
      nameTh:
        example: ผู้ใช้งานทั่วไป
        type: string
    type: object
  models.SwagChangePasswordResponse:
    properties:
      data:
        description: ข้อมูล
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Change Password Successfully
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
    type: object
  models.SwagCreateUserResponse:
    properties:
      data:
        $ref: '#/definitions/models.SwagUser'
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Created Successfully
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
    type: object
  models.SwagDeleteBase:
    properties:
      data:
        description: ข้อมูล
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Deleted Successfully
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
    type: object
  models.SwagError400:
    properties:
      data:
        description: ข้อมูล
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Bad Request
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: false
        type: boolean
    type: object
  models.SwagError404:
    properties:
      data:
        description: ข้อมูล
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Not Found
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: false
        type: boolean
    type: object
  models.SwagError500:
    properties:
      data:
        description: ข้อมูล
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Internal Server Error
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: false
        type: boolean
    type: object
  models.SwagGetAllUsersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.SwagUser'
        type: array
      message:
        description: ข้อความตอบกลับ
        example: Data Found
        type: string
      pageMeta:
        $ref: '#/definitions/models.SwagPageMeta'
        type: object
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
    type: object
  models.SwagGetRoleResponse:
    properties:
      data:
        $ref: '#/definitions/models.Role'
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Data Found
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
    type: object
  models.SwagGetUserResponse:
    properties:
      data:
        $ref: '#/definitions/models.SwagUser'
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Data Found
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
    type: object
  models.SwagLogin:
    properties:
      data:
        $ref: '#/definitions/models.SwagUser'
        type: object
      message:
        description: ข้อความตอบกลับ
        example: User logged in successfully
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
      token:
        description: token
        example: eyJhbGciOiJIUzI1NiIsI
        type: string
    type: object
  models.SwagPageMeta:
    properties:
      currentItemsCount:
        example: 1
        type: integer
      currentPageNumber:
        example: 1
        type: integer
      hasNextPage:
        example: false
        type: boolean
      hasPrevPage:
        example: false
        type: boolean
      nextPageNumber:
        example: 1
        type: integer
      nextPageUrl:
        example: /api/v1/users/addresses?page=1&pageSize=10
        type: string
      offset:
        example: 0
        type: integer
      prevPageNumber:
        example: 1
        type: integer
      prevPageUrl:
        example: /api/v1/users/addresses?page=1&pageSize=10
        type: string
      requestedPageSize:
        example: 10
        type: integer
      totalItemsCount:
        example: 1
        type: integer
      totalPagesCount:
        example: 1
        type: integer
    type: object
  models.SwagUpdateUserResponse:
    properties:
      data:
        $ref: '#/definitions/models.SwagUser'
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Updated Successfully
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
    type: object
  models.SwagUploadAvatarResponse:
    properties:
      data:
        description: ข้อมูล
        type: object
      message:
        description: ข้อความตอบกลับ
        example: Uploaded Avatar Successfully
        type: string
      success:
        description: ผลการเรียกใช้งาน
        example: true
        type: boolean
    type: object
  models.SwagUser:
    properties:
      avatar:
        description: รูป Avatar
        example: user01.png
        type: string
      email:
        description: อีเมล์
        example: user01@email.com
        type: string
      firstName:
        description: ชื่อ
        example: john
        type: string
      id:
        description: ID
        example: 1
        type: integer
      lastName:
        description: นามสกุล
        example: doe
        type: string
      slug:
        description: Slug
        example: user01
        type: string
      username:
        description: Username
        example: user01
        type: string
    type: object
  models.SwagUserBody:
    properties:
      avatar:
        description: รูป Avatar
        example: user01.png
        type: string
      email:
        description: อีเมล์
        example: user01@email.com
        type: string
      firstName:
        description: ชื่อ
        example: john
        type: string
      lastName:
        description: นามสกุล
        example: doe
        type: string
      slug:
        description: Slug
        example: user01
        type: string
      username:
        description: Username
        example: user01
        type: string
    type: object
  models.SwagUserBodyIncludePassword:
    properties:
      avatar:
        description: รูป Avatar
        example: user01.png
        type: string
      email:
        description: อีเมล์
        example: user01@email.com
        type: string
      firstName:
        description: ชื่อ
        example: john
        type: string
      lastName:
        description: นามสกุล
        example: doe
        type: string
      password:
        description: รหัสผ่าน
        example: pass1234
        type: string
      slug:
        description: Slug
        example: user01
        type: string
      username:
        description: Username
        example: user01
        type: string
    type: object
  models.UploadAvatar:
    properties:
      avatar:
        description: รูปภาพ
        example: avatar.png
        type: string
    required:
    - avatar
    type: object
  routes.login:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: 'Rest API document <style>.models {display: none !important}</style>'
  license: {}
  termsOfService: COJ
  title: COJ Specialist API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: เข้าสู่ระบบ
      parameters:
      - description: ลงชื่อเข้าสู่ระบบ
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/routes.login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagLogin'
      summary: เข้าสู่ระบบ
      tags:
      - Authentication
  /auth/me:
    get:
      consumes:
      - application/json
      description: ข้อมูลตนเอง
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagGetUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: ข้อมูลตนเอง
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: สมัครเข้าใช้งาน
      parameters:
      - description: สมัครเข้าใช้งาน
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SwagCreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      summary: สมัครเข้าใช้งาน
      tags:
      - Authentication
  /roles:
    get:
      consumes:
      - application/json
      description: รายการสิทธิ์การใช้งาน
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagGetRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: รายการสิทธิ์การใช้งาน
      tags:
      - Role
  /users:
    get:
      consumes:
      - application/json
      description: รายการผู้ใช้งาน
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagGetAllUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: รายการผู้ใช้งาน
      tags:
      - User
    post:
      consumes:
      - application/json
      description: เพิ่มผู้ใช้งาน
      parameters:
      - description: เพิ่มผู้ใช้งาน
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SwagUserBodyIncludePassword'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SwagCreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: เพิ่มผู้ใช้งาน
      tags:
      - User
  /users/{slug}:
    delete:
      consumes:
      - application/json
      description: ลบผู้ใช้งาน
      parameters:
      - description: slug ผู้ใช้งาน
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SwagDeleteBase'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: ลบผู้ใช้งาน
      tags:
      - User
    get:
      consumes:
      - application/json
      description: ข้อมูลผู้ใช้งาน
      parameters:
      - description: slug ผู้ใช้งาน
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagGetUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: ข้อมูลผู้ใช้งาน
      tags:
      - User
    put:
      consumes:
      - application/json
      description: แก้ไขผู้ใช้งาน
      parameters:
      - description: slug ผู้ใช้งาน
        in: path
        name: slug
        required: true
        type: string
      - description: แก้ไขผู้ใช้งาน
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SwagUserBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SwagUpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: แก้ไขผู้ใช้งาน
      tags:
      - User
  /users/{slug}/avatar:
    post:
      consumes:
      - application/json
      description: อัพโหลดรูป avatar
      parameters:
      - description: slug ผู้ใช้งาน
        in: path
        name: slug
        required: true
        type: string
      - description: อัพโหลดรูป avatar
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UploadAvatar'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SwagUploadAvatarResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: อัพโหลดรูป avatar
      tags:
      - User
  /users/{slug}/password:
    post:
      consumes:
      - application/json
      description: เปลี่ยนรหัสผ่าน
      parameters:
      - description: slug ผู้ใช้งาน
        in: path
        name: slug
        required: true
        type: string
      - description: เปลี่ยนรหัสผ่าน
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SwagChangePasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwagError400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.SwagError404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SwagError500'
      security:
      - ApiKeyAuth: []
      summary: เปลี่ยนรหัสผ่าน
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
